<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labshigh.realestate.internal.api.item.mapper.ItemMapper">
  <insert id="insert" keyProperty="uid" parameterType="com.labshigh.realestate.internal.api.item.dao.ItemDao" useGeneratedKeys="true">
    INSERT INTO realestate.item(member_uid, allocation_uid, status_uid, image_uri, project_name, total_price, quantity, current_quantity, allocation_day, right, location, core_value, area, scale, purpose, company_name, approval_at, website_uri, detail, token_uri)
    values(#{memberUid}, #{allocationUid}, #{statusUid}, #{imageUri}, #{projectName},  #{totalPrice}, #{quantity}, #{currentQuantity}, #{allocationDay}, #{right}, #{location}, #{coreValue}, #{area}, #{scale}, #{purpose}, #{companyName}, #{approvalAt}, #{websiteUri}, #{detail},#{tokenUri})
  </insert>

  <select id="count" resultType="int">
    SELECT 	count(*)
    FROM item AS i
           LEFT OUTER JOIN common_code AS acc
                           ON i.allocation_uid = acc.uid AND acc.deleted_flag = false AND acc.used_flag = true
           LEFT OUTER JOIN common_code AS scc
                           ON i.status_uid  = scc.uid AND scc.deleted_flag = false AND scc.used_flag = true
    WHERE deleted_flag = false AND
      used_flag = true
  </select>

  <select id="list" resultType="com.labshigh.realestate.internal.api.item.dao.ItemDao">
    SELECT 	uid ,
            created_at ,
            updated_at ,
            deleted_flag ,
            used_flag ,
            member_uid ,
            allocation_uid ,
            acc.name  AS allocation_name,
            status_uid ,
            scc.name  AS status_name,
            image_uri ,
            project_name,
            total_price,
            quantity,
            current_quantity,
            sell_start_at,
            sell_end_at,
            allocation_day,
            `right`,
            location,
            core_value,
            area,
            scale,
            purpose,
            company_name,
            approval_at,
            website_uri,
            detail,
            token_uri
    FROM item AS i
        LEFT OUTER JOIN common_code AS acc
            ON i.allocation_uid = acc.uid AND acc.deleted_flag = false AND acc.used_flag = true
        LEFT OUTER JOIN common_code AS scc
            ON i.status_uid  = scc.uid AND scc.deleted_flag = false AND scc.used_flag = true
    WHERE deleted_flag = false AND
          used_flag = true
  </select>

  <select id="detail" resultType="com.labshigh.realestate.internal.api.item.dao.ItemDao">
    SELECT 	uid ,
            created_at ,
            updated_at ,
            deleted_flag ,
            used_flag ,
            member_uid ,
            allocation_uid ,
            acc.name  AS allocation_name,
            status_uid ,
            scc.name  AS status_name,
            image_uri ,
            project_name,
            total_price,
            quantity,
            current_quantity,
            sell_start_at,
            sell_end_at,
            allocation_day,
            `right`,
            location,
            core_value,
            area,
            scale,
            purpose,
            company_name,
            approval_at,
            website_uri,
            detail,
            token_uri
    FROM item AS i
           LEFT OUTER JOIN common_code AS acc
                           ON i.allocation_uid = acc.uid AND acc.deleted_flag = false AND acc.used_flag = true
           LEFT OUTER JOIN common_code AS scc
                           ON i.status_uid  = scc.uid AND scc.deleted_flag = false AND scc.used_flag = true
    WHERE deleted_flag = false AND
      used_flag = true AND
      uid = #{uid}
  </select>

  <select id="fileList" resultType="com.labshigh.realestate.internal.api.item.dao.ItemFileDao">
    SELECT 	*
    FROM	realestate.item_file
    WHERE	used_flag = true AND
      deleted_flag = false AND
      item_uid = #{itemUid}
  </select>

</mapper>
